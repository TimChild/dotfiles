---
- name: Install yay and dev tools (Arch)
  block:
    # - name: Check if yay is installed
    #   command: yay --version
    #   register: yay_check
    #   ignore_errors: true
    #   changed_when: false

    # - name: Install yay from AUR if not present
    #   block:
    #     - name: Install base-devel and git (needed for yay build)
    #       pacman:
    #         name:
    #           - base-devel
    #           - git
    #         state: present
    #     - name: Clone yay AUR repo
    #       git:
    #         repo: https://aur.archlinux.org/yay.git
    #         dest: "{{ ansible_user_dir }}/yay"
    #         clone: yes
    #         update: no
    #         force: yes
    #         version: master
    #         accept_hostkey: yes
    #       become: false
    #     - name: Ensure yay directory is owned by user
    #       file:
    #         path: "{{ ansible_user_dir }}/yay"
    #         owner: "{{ ansible_env.USER | default(ansible_user_id) }}"
    #         group: "{{ ansible_env.USER | default(ansible_user_id) }}"
    #         recurse: yes
    #       become: false
    #     - name: Build and install yay
    #       shell: "cd {{ ansible_user_dir }}/yay && makepkg -si --noconfirm"
    #       args:
    #         creates: /usr/bin/yay
    #       become: false
    #   when: yay_check.rc != 0
    - name: Install lazygit (Arch)
      pacman:
        name: lazygit
        state: present
        
    - name: Install Task (Arch)
      pacman:
        name: go-task
        state: present
        
    - name: Install doctl (Arch)
      pacman:
        name: doctl
        state: present
        
    # - name: Install onedriver (Arch)
    #   aur:
    #     name: onedriver
    #     state: present
#
    - name: Install pipx
      package:
        name: python-pipx
        state: present

  when: ansible_os_family == 'Archlinux'

- name: Install dev tools (Debian/Ubuntu)
  block:
    - name: Install lazygit (Debian)
      block:
        - name: Get latest lazygit version
          uri:
            url: https://api.github.com/repos/jesseduffield/lazygit/releases/latest
            return_content: yes
          register: lazygit_api
        - name: Set lazygit version fact
          set_fact:
            lazygit_version: "{{ lazygit_api.json.tag_name }}"
        - name: Download lazygit tarball
          get_url:
            url: "https://github.com/jesseduffield/lazygit/releases/download/{{ lazygit_version }}/lazygit_{{ lazygit_version | regex_replace('^v', '') }}_Linux_x86_64.tar.gz"
            dest: /tmp/lazygit.tar.gz
        - name: Extract lazygit binary
          unarchive:
            src: /tmp/lazygit.tar.gz
            dest: /tmp/
            remote_src: yes
        - name: Install lazygit binary
          copy:
            src: /tmp/lazygit
            dest: /usr/local/bin/lazygit
            mode: '0755'
        - name: Remove lazygit tarball and binary
          file:
            path: "/tmp/{{ item }}"
            state: absent
          loop:
            - lazygit.tar.gz
            - lazygit

    - name: Install Task (Debian)
      snap:
        name: task
        classic: true
        state: present
        
    - name: Install doctl (Debian)
      snap:
        name: doctl
        state: present

    - name: Install onedriver (Debian)
      block:
        - name: Add onedriver repository
          apt_repository:
            repo: deb http://download.opensuse.org/repositories/home:/jstaf/xUbuntu_23.10/ /
            key: https://download.opensuse.org/repositories/home:jstaf/xUbuntu_23.10/Release.key
            state: present
        - name: Install onedriver
          apt:
            name: onedriver
            state: present
        - name: Install onedriver
          apt:
            name: onedriver
            state: present
            update_cache: yes

        - name: Install pipx
          package:
            name: pipx
            state: present
    
  when: ansible_os_family == 'Debian'

- name: Install lazydocker
  shell: curl https://raw.githubusercontent.com/jesseduffield/lazydocker/master/scripts/install_update_linux.sh | bash
  args:
    creates: /usr/local/bin/lazydocker

# TODO: Transition to uvx instead?
- name: Ensure pipx is in PATH
  shell: pipx ensurepath
  args:
    executable: /bin/bash

- name: Install global pipx
  shell: sudo pipx ensurepath --global
  args:
    executable: /bin/bash

- name: Install GitGuardian
  shell: pipx install ggshield
  args:
    executable: /bin/bash

- name: Install uv
  shell: curl -LsSf https://astral.sh/uv/install.sh | sh
  args:
    executable: /bin/bash

- name: Install nvm
  shell: wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash
  args:
    executable: /bin/bash

- name: Install Node.js
  shell: source ~/.zshrc && nvm install node
  args:
    executable: /bin/bash
    
- name: Install npm
  package:
    name: npm
    state: present

- name: Install tldr
  shell: npm install -g tldr
  args:
    executable: /bin/bash 
    